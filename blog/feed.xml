<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>Jest Blog</title>
        <link>https://facebook.github.io/blog</link>
        <description>The best place to stay up-to-date with the latest Jest news and events.</description>
        <lastBuildDate>Mon, 18 Dec 2017 06:00:00 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <image>
            <title>Jest Blog</title>
            <url>https://facebook.github.ioimg/jest.svg</url>
            <link>https://facebook.github.io/blog</link>
        </image>
        <item>
            <title><![CDATA[Jest 22: Refinements & Custom Runners]]></title>
            <link>https://facebook.github.io/blog/2017/12/18/jest-22.html</link>
            <guid>https://facebook.github.io/blog/2017/12/18/jest-22.html</guid>
            <pubDate>Mon, 18 Dec 2017 06:00:00 GMT</pubDate>
            <description><![CDATA[Today we are announcing a new major version of Jest which refines almost all
parts of Jest to provide a more solid testing foundation. Together with the Jest
community we made a number of changes across the board that will help you get
more out of Je]]></description>
        </item>
        <item>
            <title><![CDATA[Jest 20: 💖 Delightful Testing & 🏃🏽 Multi-Project-Runner]]></title>
            <link>https://facebook.github.io/blog/2017/05/06/jest-20-delightful-testing-multi-project-runner.html</link>
            <guid>https://facebook.github.io/blog/2017/05/06/jest-20-delightful-testing-multi-project-runner.html</guid>
            <pubDate>Sat, 06 May 2017 06:00:00 GMT</pubDate>
            <description><![CDATA[
A few months ago we announced
[Jest 19](http://facebook.github.io/jest/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements.html)
which came with major new features and was the biggest Jest release until today.
Jest 20 has twice the amount of changes compared to the previous version,
features a complete rewrite of the test runner, adds new testing APIs. The new
release enables a new level of customization and configuration for projects all
while making it effortless to upgrade. Beyond Painless JavaScript Testing, we
believe Jest is now delivering a **Delightful JavaScript Testing experience**.
Let's take a look at the best new features and changes in depth:

## Multi-Project-Runner & Configuration Overhaul

Until now, Jest could only operate in one project at a time. This is often
cumbersome if you are working on many smaller projects that each have their own
setup and configuration. With Jest 20, we rewrote the test runner completely to
run many projects at the same time within a single instance of Jest, for example
if you are working on a React frontend and a node.js backend. Here is a video of
Jest running tests for [React](https://github.com/facebook/react),
[Relay](https://github.com/facebook/relay),
[Yarn](https://github.com/yarnpkg/yarn) and Jest all at the same time:

![multi-runner](/jest/img/blog/20-multi-runner.gif)

]]></description>
        </item>
        <item>
            <title><![CDATA[🃏 Jest 19: Immersive Watch Mode & Test Platform Improvements]]></title>
            <link>https://facebook.github.io/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements.html</link>
            <guid>https://facebook.github.io/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements.html</guid>
            <pubDate>Tue, 21 Feb 2017 06:00:00 GMT</pubDate>
            <description><![CDATA[
Today we are pleased to ship version 19 of the Jest testing platform. It's the
biggest Jest release we have shipped so far and we are quite excited to show you
what we've built over the last two months:

## Immersive Watch Mode

We
[completely rewrote the watch mode](https://github.com/facebook/jest/pull/2362)
to make it instant and more extensible. As a result, the experience of using it
really is immersive: tests re-run instantly after a file change and we made it
easy to select the right tests.

]]></description>
        </item>
        <item>
            <title><![CDATA[A Great Developer Experience]]></title>
            <link>https://facebook.github.io/blog/2017/01/30/a-great-developer-experience.html</link>
            <guid>https://facebook.github.io/blog/2017/01/30/a-great-developer-experience.html</guid>
            <pubDate>Mon, 30 Jan 2017 06:00:00 GMT</pubDate>
            <description><![CDATA[
We strongly believe that great documentation is crucial to providing a great
developer experience. The docs should be clear, concise, and useful to new users
and veterans alike. With that in mind, we recently took some time to overhaul
the Jest website.

## Improved docs

One of the changes you'll notice upon visiting our docs is the updated sidebar.
The documentation is now divided into three main areas: an introduction to Jest,
detailed guides to Jest's features, and a comprehensive API reference.

The **Introduction** section will guide you from installing Jest and writing
your first case, to using Jest's matchers and testing async code. If you're new
to Jest or need a quick refresher, these docs should get you up to speed in no
time. If you've used Jest before and only need a quick reference on how it's
installed, you need to go no further than the
[Getting Started](/jest/docs/getting-started.html) guide.

Once you feel comfortable using Jest, proceed to the advanced **Guides**
section. The new [Snapshot Testing guide](/jest/docs/snapshot-testing.html)
covers everything you need to know about creating and maintaining snapshot test
cases.

Finally, we've completely overhauled our API reference docs. You can now find
detailed information on all of Jest's [Globals](/jest/docs/api.html),
[matchers](/jest/docs/expect.html), and [every flag](/jest/docs/cli.html)
supported by the `jest` CLI.

]]></description>
        </item>
        <item>
            <title><![CDATA[2016 in Jest]]></title>
            <link>https://facebook.github.io/blog/2016/12/15/2016-in-jest.html</link>
            <guid>https://facebook.github.io/blog/2016/12/15/2016-in-jest.html</guid>
            <pubDate>Thu, 15 Dec 2016 06:00:00 GMT</pubDate>
            <description><![CDATA[
2016 was a big year for JavaScript testing with Jest. In the first six months of
the year we rewrote Jest and built a solid foundation to significantly improve
performance and the developer experience of testing JavaScript code. We
flow-typed the entire codebase, built a ton of integration tests for Jest itself
and adopted [lerna](https://lernajs.io/) to turn Jest from a framework into a
[_Painless JavaScript Testing platform_](https://github.com/facebook/jest/tree/master/packages).

The newly created
[react-test-renderer](https://www.npmjs.com/package/react-test-renderer) finally
enabled testing of react-native components. Through the jest-react-native preset
(now merged directly into react-native) Jest now works out of the box for any
React project and comes pre-configured in
[create-react-app](https://github.com/facebookincubator/create-react-app) and
[react-native](https://github.com/facebook/react-native) projects. We integrated
core pieces of Jest into
[react-native's packager](https://github.com/facebook/react-native/tree/master/packager/react-packager/src)
and the completely new snapshot testing feature has since been used outside of
Jest: It was integrated with React Storybook as
“[storyshots](https://github.com/storybooks/storyshots)” and is being adopted by
other test runners like [ava](https://github.com/avajs/ava/pull/1113).

]]></description>
        </item>
        <item>
            <title><![CDATA[Jest 16.0: Turbocharged CLI & Community Update]]></title>
            <link>https://facebook.github.io/blog/2016/10/03/jest-16.html</link>
            <guid>https://facebook.github.io/blog/2016/10/03/jest-16.html</guid>
            <pubDate>Mon, 03 Oct 2016 06:00:00 GMT</pubDate>
            <description><![CDATA[
It's been one month since the last major release and we've made significant
improvements to Jest since. In this major release we are updating the snapshot
format we are using which will likely require snapshots to be updated when
upgrading Jest. We don't make these changes lightly and don't expect this to
happen often but we think it is necessary to improve the format from time to
time.

## Upgraded CLI

![reporter](/jest/img/blog/16-reporter.gif)

Jest 16 features a new reporter interface that shows running tests as well as a
live summary and a progress bar based on the estimated test runtime from
previous test runs. We also improved the CLI output to work better with
different color schemes. If there were test failures in a previous run, Jest
will now always run those tests first to give useful signal to users as quickly
as possible.

]]></description>
        </item>
        <item>
            <title><![CDATA[Jest 15.0: New Defaults for Jest]]></title>
            <link>https://facebook.github.io/blog/2016/09/01/jest-15.html</link>
            <guid>https://facebook.github.io/blog/2016/09/01/jest-15.html</guid>
            <pubDate>Thu, 01 Sep 2016 06:00:00 GMT</pubDate>
            <description><![CDATA[
We spent the past year making Jest
[faster](http://facebook.github.io/jest/blog/2016/03/11/javascript-unit-testing-performance.html),
[easier to configure](http://facebook.github.io/jest/blog/2016/04/12/jest-11.html),
[added tons of features](http://facebook.github.io/jest/blog/2016/06/22/jest-13.html)
and built
[snapshot testing](http://facebook.github.io/jest/blog/2016/07/27/jest-14.html).
However, there were two areas where we invested very little: the CLI output and
user experience. With Jest 15 we are changing the framework radically to make it
easier to use both for beginners and experienced users. We are excited that our
investment in Jest is now paying off: we can move fast and improve the framework
for Facebook and the open source community at light-speed. Jest's goal is to
come with batteries included and to require as little configuration as
necessary. We recently got a chance to explain our philosophy on a
[create-react-app issue](https://github.com/facebookincubator/create-react-app/pull/250#issuecomment-237098619).

The most important change to talk about is a set of
[new defaults](https://github.com/facebook/jest/pull/1511). If you are an
existing Jest user you will very likely need to update your configuration for
Jest 15. In most cases it will simplify your setup and Jest will provide useful
error messages during the upgrade. All of the new defaults can be disabled to
suit your needs, but we still consider the disabled features critical for Jest
in certain situations and will continue to use and support them at Facebook
long-term. Our
[API documentation](https://facebook.github.io/jest/docs/api.html) was also
completely rewritten to reflect these changes.
[This pull request for React](https://github.com/facebook/react/pull/7625/files)
highlights some of the changes necessary for existing projects.

]]></description>
        </item>
        <item>
            <title><![CDATA[Jest 14.0: React Tree Snapshot Testing]]></title>
            <link>https://facebook.github.io/blog/2016/07/27/jest-14.html</link>
            <guid>https://facebook.github.io/blog/2016/07/27/jest-14.html</guid>
            <pubDate>Wed, 27 Jul 2016 06:00:00 GMT</pubDate>
            <description><![CDATA[
One of Jest's philosophies is to provide an integrated “zero-configuration”
experience. We want to make it as frictionless as possible to write good tests
that are useful. We observed that when engineers are provided with ready-to-use
tools, they end up writing more tests, which in turn results in stable and
healthy code bases.

One of the big open questions was how to write React tests efficiently. There
are plenty of tools such as
[ReactTestUtils](https://facebook.github.io/react/docs/test-utils.html) and
[enzyme](http://airbnb.io/enzyme/). Both of these tools are great and are
actively being used. However engineers frequently told us that they spend more
time writing a test than the component itself. As a result many people stopped
writing tests altogether which eventually led to instabilities. Engineers told
us all they wanted was to make sure their components don't change unexpectedly.

]]></description>
        </item>
        <item>
            <title><![CDATA[Jest 13.0: Flow & REPL]]></title>
            <link>https://facebook.github.io/blog/2016/06/22/jest-13.html</link>
            <guid>https://facebook.github.io/blog/2016/06/22/jest-13.html</guid>
            <pubDate>Wed, 22 Jun 2016 06:00:00 GMT</pubDate>
            <description><![CDATA[
Today we are happy to announce the next major release of Jest. We have made
major changes to Jest which are going to benefit you and all of Facebook's
JavaScript test infrastructure. Most importantly, we added static types to all
of Jest's code during a recent Jest hackathon at Facebook. Fifteen people worked
for a day and night to add [Flow](https://flowtype.org/) types to Jest and to
add new features to Jest. The Flow types serve two purposes: First, we believe
that code is written to be read. Most of the time, code is written only once but
read by dozens of people over the course of years. Adding static types to the
project helps document the code and helps explain some of the architecture in
Jest. Second, adding static types makes maintenance easier and will allow us to
more confidently refactor parts of Jest without fear of breakages.

The Flow project has evolved a lot within Facebook and has been successfully
adopted across many of our frameworks and almost all of our product code.
Adoption can be parallelized incredibly well – it can be done file-by-file until
enough of the codebase is well-typed. Then, Flow provides real value and helps
guide through large changes. Through this, many small edge cases and bugs were
found.

]]></description>
        </item>
        <item>
            <title><![CDATA[Jest 11.0]]></title>
            <link>https://facebook.github.io/blog/2016/04/12/jest-11.html</link>
            <guid>https://facebook.github.io/blog/2016/04/12/jest-11.html</guid>
            <pubDate>Tue, 12 Apr 2016 06:00:00 GMT</pubDate>
            <description><![CDATA[
Today we're announcing a switch to major revisions for Jest with Jest 11.0 being
the first major release. Jest has been used by Facebook engineers and on our
continuous integration systems for years and we believe Jest has been way beyond
a “1.0 release” for a long time. This is similar to a change
[the React team has made](http://facebook.github.io/react/blog/2016/02/19/new-versioning-scheme.html).

If you are using Jest 0.9 or Jest 0.10 the upgrade should be seamless. All
changes from the last few months were rolled into Jest 11.0.

### New in Jest 11.0.

#### Babel Integration and Simplified Setup

`babel-jest` was adopted within the newly modularized Jest
[repository](https://github.com/facebook/jest/tree/master/packages) and it is
now seamlessly integrated into Jest. If you are upgrading from an older version
of Jest or are looking to adopt Jest, we recommend reading the
[Getting Started guide](http://facebook.github.io/jest/docs/getting-started.html).

]]></description>
        </item>
        <item>
            <title><![CDATA[JavaScript Unit Testing Performance]]></title>
            <link>https://facebook.github.io/blog/2016/03/11/javascript-unit-testing-performance.html</link>
            <guid>https://facebook.github.io/blog/2016/03/11/javascript-unit-testing-performance.html</guid>
            <pubDate>Fri, 11 Mar 2016 06:00:00 GMT</pubDate>
            <description><![CDATA[
Jest is running thousands of tests at Facebook at all times, either through
continuous integration or invoked by engineers manually during development. This
worked well for years even as the people working on Jest moved on to other
projects within Facebook.

As engineers added more and more tests though, we noticed the performance of
Jest wasn't going to scale. Additionally, in the last year the JavaScript
ecosystem has changed dramatically with the introduction of things like npm3 and
Babel, which we hadn't anticipated. We formed a new Jest team to address all of
these issues and we'll be sharing our progress and plans on this blog from now
on.

]]></description>
        </item>
    </channel>
</rss>